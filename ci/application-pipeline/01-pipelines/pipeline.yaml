apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: app-build
spec:
  params:
    # Buildah step configuration parameters - storage driver and TLS settings.
    #
  - name: STORAGE_DRIVER
    type: string
    default: vfs
  - name: TLSVERIFY
    type: string
    default: 'false'
  - name: dockerfile
    type: string
    #
    # Git repository parameters
    #
  - name: git-url
    type: string
  - name: git-revision
    type: string
  - name: app-dir
    type: string
    #
    # OpenShift imagestream URL parameters
    #
  - name: imagestream-url
    type: string
    #
    # ACS Image check parameters
    #
  - name: acs_central_endpoint
    type: string
  - name: acs_api_token
    type: string
  - name: roxctl-output-format # Advanced Cluster Security image scan output format
    type: string
  tasks:
##------------------------------------------------------------------
# Git clone resources task
##------------------------------------------------------------------
    - name: git-clone-resources
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.git-revision)
      - name: verbose
        value: 'false'
      - name: deleteExisting
        value: 'true'
      taskRef:
        kind: ClusterTask
        name:  git-clone
      workspaces:
      - name: output
        workspace: resources
##------------------------------------------------------------------
# Verify source commits
##------------------------------------------------------------------
    - name: verify-source-commits
      runAfter:
      - git-clone-resources
      taskRef:
        kind: Task
        name: verify-source-commits
      workspaces:
      - name: output
        workspace: resources
      - name: secrets
        workspace: secrets
##------------------------------------------------------------------
# Build the container
##------------------------------------------------------------------
    - name: build
      params:
      - name: TLSVERIFY
        value: "$(params.TLSVERIFY)"
      - name: STORAGE_DRIVER
        value: $(params.STORAGE_DRIVER)
      - name: app-dir
        value: $(params.app-dir)
      - name: dockerfile
        value: $(params.dockerfile)
      taskRef:
        kind: Task
        name: build
      runAfter:
      - git-clone-resources
      workspaces:
      - name: files
        workspace: files
      - name: resources
        workspace: resources
#------------------------------------------------------------------
# Push the new runtime image to OpenShift imagestream
#------------------------------------------------------------------
    - name: push-image-to-imagestream
      params:
      - name: imagestream-url
        value: $(params.imagestream-url)
      - name: STORAGE_DRIVER
        value: $(params.STORAGE_DRIVER)
      - name: TLSVERIFY
        value: "$(params.TLSVERIFY)"
      - name: pipelineRunName
        value: $(context.pipelineRun.name)
      taskRef:
        kind: Task
        name: push-image-to-ocp
      runAfter:
      - build
      - verify-source-commits
      workspaces:
      - name: files
        workspace: files
##------------------------------------------------------------------
# Perform image build check - before a possible rebuild
##------------------------------------------------------------------
    - name: image-build-check
      params:
      - name: acs_central_endpoint
        value: $(params.acs_central_endpoint)
      - name: acs_api_token
        value: $(params.acs_api_token)
      - name: public-url
        value: $(params.imagestream-url):$(tasks.push-image-to-imagestream.results.new-tag)
      - name: roxctl-output-format
        value: $(params.roxctl-output-format)
      taskRef:
        kind: Task
        name: acs-image-build-check
##------------------------------------------------------------------
# Workspace definitions
##------------------------------------------------------------------
  workspaces:
    - name: resources
    - name: files
    - name: secrets
